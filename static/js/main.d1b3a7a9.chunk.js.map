{"version":3,"sources":["components/Header.js","components/Fotter.js","pages/employeedata.js","App.js","reportWebVitals.js","index.js"],"names":["Header","className","Fotter","EmployeeData","state","employeeDetails","empDataBase","sortOrder","searchString","componentDidMount","axios","get","then","records","console","log","empData","apiData","data","results","i","length","push","firstname","name","first","lastname","last","email","img","picture","medium","phone","nat","gender","setState","sortLastName","j","temp","getfirstname","event","ele","target","value","grabfirstname","preventDefault","emprecords","filterrecords","toLocaleLowerCase","indexOf","getEmployeelist","type","this","onChange","onClick","map","item","key","src","alt","React","Component","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d1b3a7a9.chunk.js","sourcesContent":["function Header(){\n    return(\n        <nav className=\"navbar bg-primary d-flex justify-content-between\" >\n            <h1>Employee Directory</h1>\n            <p>Random API usage</p>\n</nav>\n    )\n}\n\n\nexport default Header;\n","function Fotter (){\n    return (<footer className=\"bg-primary text-right\">\n        <p>&copy; Jamie Forrester </p>\n    </footer>)\n}\n\n\n\nexport default Fotter","import React from \"react\";\nimport axios from \"axios\";\n\nclass EmployeeData extends React.Component {\n    state = {\n        employeeDetails: [],\n        empDataBase:[],\n        sortOrder: \"asc\",\n        searchString: \"\"\n    }\n\n    componentDidMount = () => {\n        axios.get(\"https://randomuser.me/api/?results=200&nat=us\")\n            .then(records => {\n                console.log(\"Records\", records)\n                let empData = []\n                let apiData = records.data.results\n                for (let i = 0; i < apiData.length; i++) {\n                    empData.push({\n                        firstname: apiData[i].name.first,\n                        lastname: apiData[i].name.last,\n                        email: apiData[i].email,\n                        img: apiData[i].picture.medium,\n                        phone: apiData[i].phone,\n                        nat: apiData[i].nat,\n                        gender: apiData[i].gender\n\n\n                    })\n                }\n                this.setState({\n                    employeeDetails: empData,\n                    empDataBase : empData\n                })\n            })\n\n    }\n    sortLastName = () => {\n        if (this.state.sortOrder === \"asc\") {\n            let empData = this.state.employeeDetails;\n            for (let i = 0; i < empData.length; i++) {\n                for (let j = 0; j < empData.length; j++) {\n                    if (empData[i].lastname < empData[j].lastname) {\n                        let temp = empData[i];\n                        empData[i] = empData[j]\n                        empData[j] = temp\n\n                    }\n                }\n            }\n            this.setState({ employeeDetails: empData, sortOrder: \"desc\" })\n            console.log(empData)\n        } else {\n            let empData = this.state.employeeDetails;\n            for (let i = 0; i < empData.length; i++) {\n                for (let j = 0; j < empData.length; j++) {\n                    if (empData[i].lastname > empData[j].lastname) {\n                        let temp = empData[i];\n                        empData[i] = empData[j]\n                        empData[j] = temp\n\n                    }\n                }\n            }\n            this.setState({ employeeDetails: empData, sortOrder: \"asc\" })\n            console.log(empData)\n        }\n\n    }\n    getfirstname = (event) => {\n        let ele = event.target.value;\n        this.setState({ searchString: ele }, () =>\n            console.log(ele))\n    }\n\n    grabfirstname = (event) => {\n        event.preventDefault()\n        let emprecords = this.state.employeeDetails;\n        let filterrecords = []\n    for (let i = 0; i < emprecords.length; i++) {\n            if (emprecords[i].firstname.toLocaleLowerCase().indexOf(this.state.searchString.toLocaleLowerCase()) > -1) {\n                filterrecords.push(emprecords[i])\n            }\n        }\n        console.log(filterrecords)\n        this.setState({\n            employeeDetails:filterrecords\n        })\n    }\ngetEmployeelist= (event) => {\n    event.preventDefault()\n    let empData = this.state.empDataBase\n    this.setState ({ employeeDetails: empData})\n\n}\n\n\n\n    render() {\n        return (<main className=\"container\">\n            <h1> IT Department</h1>\n            {/* {this.state.employeeDetails.map((item,key) => (\n                    <div className=\"card\" key={key}>\n                        <h6>{item.first}{item.last}</h6>\n                        <p>{item.email}</p>\n                    </div>\n                ))} */}\n            <form>\n                <div className=\"col-md-2\">\n                    <label className=\"form-label\">Enter employee's first name</label>\n                    <input type=\"text\" value={this.state.searchString} onChange={this.getfirstname} className=\"form-control\" />\n                </div>\n                <div className=\"col-12\">\n                    <button type=\"submit\" onClick={this.grabfirstname} className=\"btn btn-primary\">Search employee by first name</button>\n                </div>\n\n                <div className=\"col-12\">\n                    <button type=\"reset\" onClick={this.getEmployeelist} className=\"btn btn-primary\">Reset</button>\n                </div>\n\n            </form>\n            <table className=\"container-fluid table table-striped\">\n                <thead>\n                    <tr>\n                        <th>Bio pic</th>\n                        <th>First Name</th>\n                        <th><button className=\"btn btn-primary\" onClick={this.sortLastName}>Last Name</button></th>\n                        <th>Email</th>\n                        <th>Phone Number</th>\n                        <th>Nationality</th>\n                        <th>Gender</th>\n\n\n                    </tr>\n                </thead>\n                <tbody>\n                    {this.state.employeeDetails.map((item, key) => {\n                        return (<tr key={key}>\n                            <td><img src={item.img} alt=\"bio pics\" /></td>\n                            <td>{item.firstname}</td>\n                            <td> {item.lastname}</td>\n                            <td> {item.email}</td>\n                            <td> {item.phone}</td>\n                            <td> {item.nat}</td>\n                            <td> {item.gender}</td>\n\n\n\n                        </tr>)\n                    })}\n                </tbody>\n            </table>\n        </main>\n        )\n    }\n\n}\n\n\nexport default EmployeeData","import Header from './components/Header';\nimport Footer from './components/Fotter';\nimport EmployeeData from './pages/employeedata';\n\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header />\n      <EmployeeData></EmployeeData>\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}